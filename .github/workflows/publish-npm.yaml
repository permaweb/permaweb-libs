name: Auto Tag and Publish to NPM

on:
  push:
    branches:
      - main
    paths:
      - 'sdk/package.json'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Determine version bump from commit message
        id: bump
        run: |
          msg=$(git log -1 --pretty=%B)
          echo "Latest commit message: $msg"

          if echo "$msg" | grep -Eq "^(feat|fix)!:"; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif echo "$msg" | grep -Eq "^feat:"; then
            echo "type=minor" >> $GITHUB_OUTPUT
          elif echo "$msg" | grep -Eq "^fix:"; then
            echo "type=patch" >> $GITHUB_OUTPUT
          
      - name: Install dependencies
        run: npm run clean:install
        working-directory: ./sdk
        
      - name: Build package
        run: npm run build
        working-directory: ./sdk

      - name: Bump version, generate changelog, and push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          VERSION_TYPE=${{ steps.bump.outputs.type }}
          echo "Bumping version: $VERSION_TYPE"
          npm version $VERSION_TYPE -m "chore(release): %s"

          # Generate or update CHANGELOG.md
          npx auto-changelog -p -u

          if [ -n "$(git status --porcelain CHANGELOG.md)" ]; then
            git add CHANGELOG.md
            git commit -m "chore(release): update changelog for $VERSION_TYPE"
          fi

          git push origin HEAD --follow-tags
        working-directory: ./sdk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Setup npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        working-directory: ./sdk
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish to NPM
        run: npm publish
        working-directory: ./sdk
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Cleanup
        if: always()
        run: rm -f .npmrc
        working-directory: ./sdk