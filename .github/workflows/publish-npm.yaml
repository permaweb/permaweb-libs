name: Auto Tag and Publish to NPM

on:
  push:
    branches:
      - main
    paths:
      - 'sdk/package.json'
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Get package version
        id: package-version
        run: |
          VERSION=$(node -p "require('./sdk/package.json').version")
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: v$VERSION"
        
      - name: Check if tag exists
        id: tag-exists
        run: |
          if git tag --list | grep -q "^${{ steps.package-version.outputs.version }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.package-version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag ${{ steps.package-version.outputs.version }} does not exist"
          fi
        
      - name: Create and push tag
        if: github.ref == 'refs/heads/main' && steps.tag-exists.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.package-version.outputs.version }}
          git push origin ${{ steps.package-version.outputs.version }}
          echo "Created and pushed tag: ${{ steps.package-version.outputs.version }}"
          
      - name: Install dependencies
        run: npm run clean:install
        working-directory: ./sdk
        
      - name: Build package
        run: npm run build
        working-directory: ./sdk
        
      - name: Setup npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        working-directory: ./sdk
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Publish to NPM
        run: npm publish
        working-directory: ./sdk
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Cleanup
        if: always()
        run: rm -f .npmrc
        working-directory: ./sdk